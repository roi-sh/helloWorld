name: $(Date:yyyyMMdd).$(Rev:r)

trigger:
- master

variables:
  buildConfiguration: 'Release'
  dotnetVersion: '6.0.x'
  nugetPackageName: 'MySampleApp'

pool:
  name: 'Default'

stages:
- stage: Build
  displayName: 'Build and Package'
  jobs:
  - job: Build
    displayName: 'Build job'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK'
      inputs:
        version: $(dotnetVersion)

    - script: dotnet restore
      displayName: 'Restore dependencies'

    - script: dotnet build --configuration $(buildConfiguration) --no-restore
      displayName: 'Build solution'

    - script: dotnet test --configuration $(buildConfiguration) --no-build --verbosity normal
      displayName: 'Run tests'

    - task: DotNetCoreCLI@2
      displayName: 'Pack NuGet package'
      inputs:
        command: 'pack'
        configuration: $(buildConfiguration)
        packagesToPack: '**/$(nugetPackageName).csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'VERSION_NUMBER'  # This will use the version from Directory.Build.props

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Publish
  displayName: 'Publish to Azure Artifacts'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Publish
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download build artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'

    - task: NuGetCommand@2
      displayName: 'Push to Azure Artifacts'
      inputs:
        command: 'push'
        packagesToPush: '$(System.ArtifactsDirectory)/drop/**/*.nupkg'
        publishVstsFeed: 'helloWorld'
        allowPackageConflicts: true